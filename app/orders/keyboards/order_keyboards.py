from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Tuple, Optional
from ...models.models import Order
from ..constants import (
    normalize_admin_status
)
import logging

def get_orders_menu_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∑–∞–∫–∞–∑–æ–≤"""
    keyboard = [
        [
            InlineKeyboardButton(text="üìã –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã", callback_data="orders_status_new"),
            InlineKeyboardButton(text="‚ö° –í —Ä–∞–±–æ—Ç–µ", callback_data="orders_status_processing")
        ],
        [
            InlineKeyboardButton(text="üì¶ –ì–æ—Ç–æ–≤—ã –∫ –≤—ã–¥–∞—á–µ", callback_data="orders_status_ready"),
            InlineKeyboardButton(text="‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ", callback_data="orders_status_completed")
        ],
        [
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ", callback_data="orders_status_cancelled"),
            InlineKeyboardButton(text="üìä –í—Å–µ –∑–∞–∫–∞–∑—ã", callback_data="orders_status_all")
        ],
        [
            InlineKeyboardButton(text="üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="orders_analytics"),
            InlineKeyboardButton(text="üîô –í –º–µ–Ω—é", callback_data="menu:main")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_orders_list_keyboard(orders: List[Order], status: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–∫–∞–∑–æ–≤"""
    keyboard = []
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    for i in range(0, len(orders), 2):
        row = []
        for order in orders[i:i+2]:
            row.append(InlineKeyboardButton(
                text=f"#{order.id} ({order.total_cost} T-Points)",
                callback_data=f"view_order_{order.id}_{status}"
            ))
        keyboard.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
    keyboard.append([InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥",
        callback_data="back_to_orders_menu"
    )])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_order_details_keyboard(order_id: int, status: str, status_list: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–º"""
    keyboard = []
    
    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Å—Ç–∞—Ç—É—Å –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    normalized_status = normalize_admin_status(status)
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    logger = logging.getLogger(__name__)
    logger.info(f"Order {order_id}: original_status='{status}', normalized_status='{normalized_status}'")
    
    # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
    if normalized_status == 'new':
        logger.info(f"Order {order_id}: Adding '–í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É' button")
        keyboard.append([
            InlineKeyboardButton(
                text="‚úÖ –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É",
                callback_data=f"update_status_{order_id}_processing_{status_list}"
            ),
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
                callback_data=f"update_status_{order_id}_cancelled_{status_list}"
            )
        ])
    elif normalized_status == 'processing':
        logger.info(f"Order {order_id}: Adding '–ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ' button")
        keyboard.append([
            InlineKeyboardButton(
                text="üì¶ –ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ",
                callback_data=f"update_status_{order_id}_ready_for_pickup_{status_list}"
            ),
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
                callback_data=f"update_status_{order_id}_cancelled_{status_list}"
            )
        ])
    elif normalized_status == 'ready_for_pickup':
        logger.info(f"Order {order_id}: Adding '–í—ã–¥–∞–Ω' button")
        keyboard.append([
            InlineKeyboardButton(
                text="‚úÖ –í—ã–¥–∞–Ω",
                callback_data=f"update_status_{order_id}_delivered_{status_list}"
            ),
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
                callback_data=f"update_status_{order_id}_cancelled_{status_list}"
            )
        ])
    else:
        logger.warning(f"Order {order_id}: No action buttons for status '{normalized_status}'")
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É
    keyboard.append([InlineKeyboardButton(
        text="üîô –ö —Å–ø–∏—Å–∫—É",
        callback_data=f"back_to_orders_list_{status_list}"
    )])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_order_analytics_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    keyboard = [
        [
            InlineKeyboardButton(text="üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="analytics_general"),
            InlineKeyboardButton(text="üë• –ü–æ –æ—Ç–¥–µ–ª–∞–º", callback_data="analytics_departments")
        ],
        [
            InlineKeyboardButton(text="üì¶ –¢–æ–ø —Ç–æ–≤–∞—Ä–æ–≤", callback_data="analytics_top_products"),
            InlineKeyboardButton(text="üëë –¢–æ–ø –∞–º–±–∞—Å—Å–∞–¥–æ—Ä–æ–≤", callback_data="analytics_top_ambassadors")
        ],
        [InlineKeyboardButton(text="üîô –ö –∑–∞–∫–∞–∑–∞–º", callback_data="back_to_orders_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_analytics_details_keyboard(analytics_type: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π"""
    keyboard = [[InlineKeyboardButton(text="üîô –ö –∞–Ω–∞–ª–∏—Ç–∏–∫–µ", callback_data="back_to_analytics")]]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_notification_keyboard(order_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ"""
    keyboard = [
        [
            InlineKeyboardButton(text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"order_accept_{order_id}"),
            InlineKeyboardButton(text="‚è≥ –ü–æ–∑–∂–µ", callback_data=f"order_later_{order_id}")
        ],
        [InlineKeyboardButton(text="‚ùå –°–∫—Ä—ã—Ç—å", callback_data=f"order_dismiss_{order_id}")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard) 