import logging
from typing import Optional
from aiogram import Bot
from aiogram.exceptions import TelegramBadRequest, TelegramForbiddenError
from ..core.base import BaseService

logger = logging.getLogger(__name__)

class GroupManagementService(BaseService):
    """–°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–ª–µ–Ω—Å—Ç–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –≥—Ä—É–ø–ø–µ"""
    
    def __init__(self, session, group_id: int):
        super().__init__(session)
        self.group_id = group_id
        logger.info(f"Initialized GroupManagementService with group_id: {group_id}")
    
    async def remove_user_from_group(self, bot: Bot, user_id: int, reason: str = "–î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞") -> bool:
        """
        –£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥—Ä—É–ø–ø—ã
        
        Args:
            bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            reason: –ü—Ä–∏—á–∏–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è (–¥–ª—è –ª–æ–≥–æ–≤)
            
        Returns:
            bool: True –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω
        """
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤ –≥—Ä—É–ø–ø–µ
            try:
                member = await bot.get_chat_member(
                    chat_id=self.group_id,
                    user_id=user_id
                )
                
                if member.status in ["left", "kicked", "banned"]:
                    logger.info(f"User {user_id} is already not a member (status: {member.status})")
                    return True
                    
            except TelegramBadRequest as e:
                if "user not found" in str(e).lower():
                    logger.warning(f"User {user_id} not found in group")
                    return True
                raise
            
            # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥—Ä—É–ø–ø—ã
            success = await bot.ban_chat_member(
                chat_id=self.group_id,
                user_id=user_id,
                revoke_messages=False  # –ù–µ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            )
            
            if success:
                # –°—Ä–∞–∑—É —Ä–∞–∑–±–∞–Ω–∏–≤–∞–µ–º, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –≤–µ—Ä–Ω—É—Ç—å—Å—è —á–µ—Ä–µ–∑ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
                await bot.unban_chat_member(
                    chat_id=self.group_id,
                    user_id=user_id,
                    only_if_banned=True
                )
                
                logger.warning(f"üö® USER REMOVED FROM GROUP: {user_id} - Reason: {reason}")
                return True
            else:
                logger.error(f"Failed to remove user {user_id} from group")
                return False
                
        except TelegramForbiddenError as e:
            logger.error(f"Bot lacks permissions to remove user {user_id}: {e}")
            return False
        except TelegramBadRequest as e:
            logger.error(f"Bad request when removing user {user_id}: {e}")
            return False
        except Exception as e:
            logger.error(f"Unexpected error removing user {user_id} from group: {e}")
            return False
    
    async def check_bot_permissions(self, bot: Bot) -> dict:
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ
        
        Returns:
            dict: –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–∞–≤–∞—Ö –±–æ—Ç–∞
        """
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ –≤ –≥—Ä—É–ø–ø–µ
            bot_member = await bot.get_chat_member(
                chat_id=self.group_id,
                user_id=(await bot.get_me()).id
            )
            
            permissions = {
                "is_admin": bot_member.status in ["creator", "administrator"],
                "can_restrict_members": False,
                "status": bot_member.status
            }
            
            if hasattr(bot_member, 'can_restrict_members'):
                permissions["can_restrict_members"] = bot_member.can_restrict_members
            
            logger.info(f"Bot permissions in group {self.group_id}: {permissions}")
            return permissions
            
        except Exception as e:
            logger.error(f"Error checking bot permissions: {e}")
            return {
                "is_admin": False,
                "can_restrict_members": False,
                "status": "unknown",
                "error": str(e)
            }
    
    async def get_user_status_in_group(self, bot: Bot, user_id: int) -> Optional[str]:
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–µ
        
        Returns:
            Optional[str]: –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ None –ø—Ä–∏ –æ—à–∏–±–∫–µ
        """
        try:
            member = await bot.get_chat_member(
                chat_id=self.group_id,
                user_id=user_id
            )
            return member.status
        except Exception as e:
            logger.error(f"Error getting user {user_id} status in group: {e}")
            return None
    
    async def notify_user_about_removal(self, bot: Bot, user_id: int, reason: str = "–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞"):
        """
        –£–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –≥—Ä—É–ø–ø—ã
        
        Args:
            bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            reason: –ü—Ä–∏—á–∏–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è
        """
        try:
            message = (
                "üö® <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –≥—Ä—É–ø–ø—ã</b>\n\n"
                f"‚ùå –í—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –≥—Ä—É–ø–ø—ã –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}\n\n"
                "üìù –î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∏–ª–∏ HR.\n"
                "üí° –ü–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–Ω–æ–≤–æ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É."
            )
            
            await bot.send_message(
                chat_id=user_id,
                text=message
            )
            
            logger.info(f"Sent removal notification to user {user_id}")
            
        except Exception as e:
            logger.error(f"Failed to send removal notification to user {user_id}: {e}") 